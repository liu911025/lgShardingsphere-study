#sharding分库
spring:
  shardingsphere:
    datasource:
      names: ds0, ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
        username: root
        password: root
        maxPoolSize: 50
        minPoolSize: 1
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
        username: root
        password: root
        maxPoolSize: 50
        minPoolSize: 1
    sharding:
      tables:
        user:
          actual-data-nodes: ds$->{0..1}.user
        health_record:
          actual-data-nodes: ds$->{0..1}.health_record
          key-generator:
            column: record_id
            type: SNOWFLAKE
            props:
              worker:
                id: 33
        health_task:
          actual-data-nodes: ds$->{0..1}.health_task
          key-generator:
            column: task_id
            type: SNOWFLAKE
            props:
              worker:
                id: 33
      binding-tables: health_record, health_task
      broadcast-tables: health_level
      default-database-strategy:
        inline:
          sharding-column: user_id
          algorithm-expression: ds$->{user_id % 2}
      default-data-source-name: ds0


    props:
      sql.show: true
